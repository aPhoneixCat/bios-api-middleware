{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Actitity": {
				"enum": [
					"Checkin",
					"Checkout"
				],
				"type": "string"
			},
			"EventType": {
				"enum": [
					"Cardholder_CheckinCheckout"
				],
				"type": "string"
			},
			"CardholderCheckinoutEvent": {
				"properties": {
					"timestamp": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/EventType"
					},
					"message": {
						"type": "string"
					},
					"cardholderId": {
						"type": "string"
					},
					"activity": {
						"$ref": "#/components/schemas/Actitity"
					}
				},
				"required": [
					"timestamp",
					"type",
					"message",
					"cardholderId",
					"activity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EventResponse": {
				"properties": {
					"events": {
						"items": {
							"$ref": "#/components/schemas/CardholderCheckinoutEvent"
						},
						"type": "array"
					}
				},
				"required": [
					"events"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {},
					"error": {}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserType": {
				"enum": [
					"visitor",
					"staff",
					"vip"
				],
				"type": "string"
			},
			"AddCardToCardholderRequest": {
				"properties": {
					"cardNumber": {
						"type": "string"
					},
					"fromInMs": {
						"type": "number",
						"format": "double"
					},
					"validityPeriodInMs": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"cardNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateCardholderRequest": {
				"properties": {
					"userName": {
						"type": "string"
					},
					"userType": {
						"$ref": "#/components/schemas/UserType"
					},
					"authorised": {
						"type": "boolean"
					},
					"card2Add": {
						"$ref": "#/components/schemas/AddCardToCardholderRequest"
					}
				},
				"required": [
					"userName",
					"userType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateCardholderRequest": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "bios-api-middleware",
		"version": "1.0.0",
		"description": "A building's inter-operational system, a.k.a, api middleware/gateway providing interfaces to help external integration with building's intranet systems.",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "TBD"
		}
	},
	"paths": {
		"/acs/cardholders/{cardholderId}": {
			"get": {
				"operationId": "GetCardholder",
				"responses": {
					"200": {
						"description": "Cardholder details",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Retrives the details of an existing cardholder.",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "Supply the unique cardholdr ID",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"patch": {
				"operationId": "UpdateCardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "A dummy API, currently, we don't have any requirement on it. Might add in the future.",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "path variable with unique cardholder ID",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "request body to update cardholder",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateCardholderRequest",
								"description": "request body to update cardholder"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "RemoveCardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Delete existing cardholder",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "Path variable of unique cardholder ID",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/acs/cardholders": {
			"post": {
				"operationId": "CreateCardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Create new cardholder, and optionally add new card",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "request body to add cardholder",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCardholderRequest",
								"description": "request body to add cardholder"
							}
						}
					}
				}
			}
		},
		"/acs/cardholders/{cardholderId}/activate": {
			"get": {
				"operationId": "ActivateCardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Activate/Deactivate existing cardholder",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "Path variable of unique existing cardholder",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Query parameter of boolean flag to activate (True)/de-activate(False)",
						"in": "query",
						"name": "authorised",
						"required": true,
						"schema": {
							"type": "boolean"
						}
					}
				]
			}
		},
		"/acs/cardholders/{cardholderId}/cards": {
			"post": {
				"operationId": "AddCard2Cardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Add new card to existing cardholder",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "Path variables of unique cardholder ID",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "request body to add new card",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddCardToCardholderRequest",
								"description": "request body to add new card"
							}
						}
					}
				}
			}
		},
		"/acs/cardholders/{cardholderId}/cards/{cardId}": {
			"delete": {
				"operationId": "RemoveCardFromCardholder",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IResponse"
								}
							}
						}
					}
				},
				"description": "Remove existing card from existing cardholder",
				"tags": [
					"ACS"
				],
				"security": [],
				"parameters": [
					{
						"description": "Path variable of unique existing cardholder ID",
						"in": "path",
						"name": "cardholderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Path variable of existing card ID",
						"in": "path",
						"name": "cardId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}