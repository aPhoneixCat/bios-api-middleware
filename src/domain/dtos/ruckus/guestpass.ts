export interface Wlan {
  id?: string;
	name?: string;
}

export interface Zone {
  id?: string;
	name?: string;
}

export interface PassValidFor {
  expirationValue?: number;
	expirationUnit?: 'HOUR' | 'DAY' | 'WEEK';
}

export interface MaxDevices {
  maxDevicesAllowed?: 'UNLIMITED' | 'LIMITED';
	maxDevicesNumber?: number;
}

export interface SessionDuration {
  requireLoginAgain?: boolean;
	sessionValue?: number;
	sessionUnit?: 'MIN' | 'HOUR' | 'DAY' | 'WEEK';
}

export type PassEffectSince = 'CREATION_TIME' | 'FIRST_USE'

export interface RuckusGuestPassGenerateRequest {
	domainId?: string;
	guestName: string;
	wlan?: Wlan;
	zone?: Zone;
	numberOfPasses: number;
	passValidFor: PassValidFor;
	autoGeneratedPassword?: boolean;
  passValue?: string,
	passEffectSince: PassEffectSince;
	passUseDays?: number;
	maxDevices: MaxDevices;
	sessionDuration?: SessionDuration;
	remarks?: string;
}

export interface RuckusGuestPassGenerateResponse {
	id?: string;
}

export interface RuckusGuestPassListParameters {
	// The index of the first entry to be retrieved. Default: 0
	index?: string;
	// The maximum number of entries to be retrieved. Default: 100, Maximum: 1000
	listSize?: string;
	// Display created date and time by specified time zone. Default is UTC.
	timeZone?: string;
	// filter identity guest pass list by wlan id.
	wlan?: string;
	// filter identity guest pass list by display name.
	displayName?: string;
	// filter identity guest pass list by expiration date and time. The start time of expiration date and time.The format is yyyy-MM-dd HH:mm:ss.
	expirationFrom?: string;
	// filter identity guest pass list by expiration date and time. The end time of expiration date and time.The format is yyyy-MM-dd HH:mm:ss.
	expirationTo?: string;
	//filter identity guest pass list by generated date and time. The start time of generated date and time.The format is yyyy-MM-dd HH:mm:ss.
	generatedTimeFrom?: string;
	// filter identity guest pass list by generated date and time. The end time of generated date and time.The format is yyyy-MM-dd HH:mm:ss.
	generatedTimeTo?: string;
}

export interface RuckusGuestPassListResponse {
	totalCount?: number;
	hasMore?: boolean;
	firstIndex?: number;
	/**
	 * extra information for GuestPass
	 */
	extra?: {
		rbacMetadata?: {
			[k: string]: string;
		}[];
		[k: string]: unknown;
	};
	list?: {
		/**
		 * ID of the identity guest pass
		 */
		id?: string;
		/**
		 * user ID of the identity guest pass
		 */
		userId?: string;
		/**
		 * Identifier of the identity guest pass
		 */
		key?: string;
		/**
		 * Guest name of the identity guest pass
		 */
		guestName?: string;
		/**
		 * wlan
		 */
		wlan?: Wlan;
		/**
		 * zone
		 */
		zone?: Zone;
		/**
		 * SSID
		 */
		ssid?: string;
		/**
		 * Pass valid for
		 */
		passValidFor?: PassValidFor;
		/**
		 * max Devices
		 */
		maxDevices?: MaxDevices;
		/**
		 * Pass generation
		 */
		autoGeneratedPassword?: boolean;
		/**
		 * Pass effective since
		 */
		passEffectSince?: PassEffectSince;
		/**
		 * Expire new guest pass if not used within
		 */
		passUseDays?: number;
		/**
		 * Remarks
		 */
		remarks?: string;
		/**
		 * Generated date and time
		 */
		generatedOn?: string;
		/**
		 * Expiration date and time
		 */
		expirationDate?: string;
		/**
		 * Wlan description
		 */
		wlanRestrition?: string;
		/**
		 * session duration
		 */
		sessionDuration?: SessionDuration;
		/**
		 * identifier of the domain
		 */
		domainId?: string;
		/**
		 * Username who generate this GuestPass
		 */
		creatorUsername?: string;
		/**
		 * Is Disabled
		 */
		isDisabled?: string;
	}[];
}
